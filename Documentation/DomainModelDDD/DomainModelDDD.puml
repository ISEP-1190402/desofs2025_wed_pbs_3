@startuml
title Library Online Rental System - DDD Domain Model

skinparam classAttributeIconSize 0

' =========================
' User Aggregate
' =========================
package "User Aggregate" {
  class User {
    +UserId: Guid
    +Name: string
    +Email: Email
    +Password: Password
    +Role: UserRole
    +Status: UserStatus
  }

  class Email <<ValueObject>> {
    -Address: string
    +isValid(): bool
  }

  class Password <<ValueObject>> {
    -Hash: string
    +fromPlainText(pwd: string): Password
  }

  enum UserRole {
    USER
    MANAGER
    ADMIN
  }

  enum UserStatus {
    Active
    Blocked
  }

  User --> Email
  User --> Password
}

' =========================
' Book Aggregate
' =========================
package "Book Aggregate" {
  class Book {
    +BookId: Guid
    +Info: BookInfo
    +ISBN: ISBN
    +Copies: Copies
  }

  class BookInfo <<ValueObject>> {
    -Title: string
    -Author: string
    -Publisher: string
    -Category: string
  }

  class ISBN <<ValueObject>> {
    -Code: string
    +isValid(): bool
  }

  class Copies <<ValueObject>> {
    -Available: int
    -Total: int
    +canRent(): bool
  }

  class Rating {
    +RatingId: Guid
    +UserId: Guid
    +Score: RatingScore
    +Comment: Comment
    +Date: DateTime
  }

  class RatingScore <<ValueObject>> {
    -Score: int
    +isValid(): bool
  }

  class Comment <<ValueObject>> {
    -Text: string
    +sanitize(): string
  }

  Book --> BookInfo
  Book --> ISBN
  Book --> Copies
  Rating --> RatingScore
  Rating --> Comment
  Book "1" *-- "0..*" Rating : has >
}

' =========================
' Rental Aggregate
' =========================
package "Rental Aggregate" {
  class Rental {
    +RentalId: Guid
    +UserId: Guid
    +BookId: Guid
    +Period: RentalPeriod
    +Status: RentalStatus
  }

  class RentalPeriod <<ValueObject>> {
    -StartDate: DateTime
    -DueDate: DateTime
    +isOverdue(): bool
  }

  enum RentalStatus {
    Active
    Returned
    Overdue
  }

  Rental --> RentalPeriod
}

' =========================
' Relations between Aggregates
' =========================
User "1" --> "0..*" Rental : rents >
Book "1" --> "0..*" Rental : is rented in >
User "1" --> "0..*" Rating : gives >

@enduml