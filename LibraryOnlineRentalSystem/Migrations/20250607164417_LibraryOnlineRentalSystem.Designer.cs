// <auto-generated />
using System;
using LibraryOnlineRentalSystem.Repository.Common;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibraryOnlineRentalSystem.Migrations
{
    [DbContext(typeof(LibraryDbContext))]
    [Migration("20250607164417_LibraryOnlineRentalSystem")]
    partial class LibraryOnlineRentalSystem
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("LibraryOnlineRentalSystem.Domain.Book.Book", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("LibraryOnlineRentalSystem.Domain.User.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<string>("HashedPassword")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("LibraryOnlineRentalSystem.Domain.Book.Book", b =>
                {
                    b.OwnsOne("LibraryOnlineRentalSystem.Domain.Book.AmountOfCopies", "AmountOfCopies", b1 =>
                        {
                            b1.Property<string>("BookId")
                                .HasColumnType("varchar(255)");

                            b1.Property<int>("BookAmountOfCopies")
                                .HasColumnType("int");

                            b1.HasKey("BookId");

                            b1.ToTable("Books");

                            b1.WithOwner()
                                .HasForeignKey("BookId");
                        });

                    b.OwnsOne("LibraryOnlineRentalSystem.Domain.Book.Author", "Author", b1 =>
                        {
                            b1.Property<string>("BookId")
                                .HasColumnType("varchar(255)");

                            b1.Property<string>("BookAuthor")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.HasKey("BookId");

                            b1.ToTable("Books");

                            b1.WithOwner()
                                .HasForeignKey("BookId");
                        });

                    b.OwnsOne("LibraryOnlineRentalSystem.Domain.Book.Category", "Category", b1 =>
                        {
                            b1.Property<string>("BookId")
                                .HasColumnType("varchar(255)");

                            b1.Property<string>("BookCategoryName")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.HasKey("BookId");

                            b1.ToTable("Books");

                            b1.WithOwner()
                                .HasForeignKey("BookId");
                        });

                    b.OwnsOne("LibraryOnlineRentalSystem.Domain.Book.Description", "Description", b1 =>
                        {
                            b1.Property<string>("BookId")
                                .HasColumnType("varchar(255)");

                            b1.Property<string>("BookDescription")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.HasKey("BookId");

                            b1.ToTable("Books");

                            b1.WithOwner()
                                .HasForeignKey("BookId");
                        });

                    b.OwnsOne("LibraryOnlineRentalSystem.Domain.Book.ISBN", "Isbn", b1 =>
                        {
                            b1.Property<string>("BookId")
                                .HasColumnType("varchar(255)");

                            b1.Property<string>("BookISBN")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.HasKey("BookId");

                            b1.ToTable("Books");

                            b1.WithOwner()
                                .HasForeignKey("BookId");
                        });

                    b.OwnsOne("LibraryOnlineRentalSystem.Domain.Book.Publisher", "Publisher", b1 =>
                        {
                            b1.Property<string>("BookId")
                                .HasColumnType("varchar(255)");

                            b1.Property<string>("PublisherName")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.HasKey("BookId");

                            b1.ToTable("Books");

                            b1.WithOwner()
                                .HasForeignKey("BookId");
                        });

                    b.Navigation("AmountOfCopies")
                        .IsRequired();

                    b.Navigation("Author")
                        .IsRequired();

                    b.Navigation("Category")
                        .IsRequired();

                    b.Navigation("Description")
                        .IsRequired();

                    b.Navigation("Isbn")
                        .IsRequired();

                    b.Navigation("Publisher")
                        .IsRequired();
                });

            modelBuilder.Entity("LibraryOnlineRentalSystem.Domain.User.User", b =>
                {
                    b.OwnsOne("LibraryOnlineRentalSystem.Domain.User.Biography", "Biography", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Description")
                                .IsRequired()
                                .HasColumnType("longtext")
                                .HasColumnName("Biography");

                            b1.HasKey("UserId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.OwnsOne("LibraryOnlineRentalSystem.Domain.User.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("EmailAddress")
                                .IsRequired()
                                .HasColumnType("longtext")
                                .HasColumnName("Email");

                            b1.HasKey("UserId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.OwnsOne("LibraryOnlineRentalSystem.Domain.User.NIF", "Nif", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("TaxID")
                                .IsRequired()
                                .HasColumnType("longtext")
                                .HasColumnName("NIF");

                            b1.HasKey("UserId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.OwnsOne("LibraryOnlineRentalSystem.Domain.User.Name", "Name", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("FullName")
                                .IsRequired()
                                .HasColumnType("longtext")
                                .HasColumnName("Name");

                            b1.HasKey("UserId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.OwnsOne("LibraryOnlineRentalSystem.Domain.User.PhoneNumber", "PhoneNumber", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Number")
                                .IsRequired()
                                .HasColumnType("longtext")
                                .HasColumnName("PhoneNumber");

                            b1.HasKey("UserId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.OwnsOne("LibraryOnlineRentalSystem.Domain.User.UserName", "UserName", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Tag")
                                .IsRequired()
                                .HasColumnType("longtext")
                                .HasColumnName("UserName");

                            b1.HasKey("UserId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.Navigation("Biography")
                        .IsRequired();

                    b.Navigation("Email")
                        .IsRequired();

                    b.Navigation("Name")
                        .IsRequired();

                    b.Navigation("Nif")
                        .IsRequired();

                    b.Navigation("PhoneNumber")
                        .IsRequired();

                    b.Navigation("UserName")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
