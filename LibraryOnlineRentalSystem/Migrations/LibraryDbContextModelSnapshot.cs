// <auto-generated />
using System;
using LibraryOnlineRentalSystem.Repository.Common;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibraryOnlineRentalSystem.Migrations
{
    [DbContext(typeof(LibraryDbContext))]
    partial class LibraryDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("LibraryOnlineRentalSystem.Domain.Book.Book", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("Books", (string)null);
                });

            modelBuilder.Entity("LibraryOnlineRentalSystem.Domain.Role.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Roles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("2bb380a5-2ed3-4252-9c4a-5a0fd56aaa79"),
                            Description = "Administrator with full access",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = new Guid("ea3d8917-391e-4474-a691-0244f6a37a4e"),
                            Description = "Library manager with book management access",
                            Name = "LibraryManager"
                        },
                        new
                        {
                            Id = new Guid("fc9d9222-d241-49f7-b73b-2e3fe1fe4efb"),
                            Description = "Regular user with basic access",
                            Name = "User"
                        });
                });

            modelBuilder.Entity("LibraryOnlineRentalSystem.Domain.User.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("LibraryOnlineRentalSystem.Domain.Book.Book", b =>
                {
                    b.OwnsOne("LibraryOnlineRentalSystem.Domain.Book.Book.AmountOfCopies#LibraryOnlineRentalSystem.Domain.Book.AmountOfCopies", "AmountOfCopies", b1 =>
                        {
                            b1.Property<string>("BookId")
                                .HasColumnType("varchar(255)");

                            b1.Property<int>("BookAmountOfCopies")
                                .HasColumnType("int");

                            b1.HasKey("BookId");

                            b1.ToTable("Books", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("BookId");
                        });

                    b.OwnsOne("LibraryOnlineRentalSystem.Domain.Book.Book.Author#LibraryOnlineRentalSystem.Domain.Book.Author", "Author", b1 =>
                        {
                            b1.Property<string>("BookId")
                                .HasColumnType("varchar(255)");

                            b1.Property<string>("BookAuthor")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.HasKey("BookId");

                            b1.ToTable("Books", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("BookId");
                        });

                    b.OwnsOne("LibraryOnlineRentalSystem.Domain.Book.Book.Category#LibraryOnlineRentalSystem.Domain.Book.Category", "Category", b1 =>
                        {
                            b1.Property<string>("BookId")
                                .HasColumnType("varchar(255)");

                            b1.Property<string>("BookCategoryName")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.HasKey("BookId");

                            b1.ToTable("Books", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("BookId");
                        });

                    b.OwnsOne("LibraryOnlineRentalSystem.Domain.Book.Book.Description#LibraryOnlineRentalSystem.Domain.Book.Description", "Description", b1 =>
                        {
                            b1.Property<string>("BookId")
                                .HasColumnType("varchar(255)");

                            b1.Property<string>("BookDescription")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.HasKey("BookId");

                            b1.ToTable("Books", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("BookId");
                        });

                    b.OwnsOne("LibraryOnlineRentalSystem.Domain.Book.Book.Isbn#LibraryOnlineRentalSystem.Domain.Book.ISBN", "Isbn", b1 =>
                        {
                            b1.Property<string>("BookId")
                                .HasColumnType("varchar(255)");

                            b1.Property<string>("BookISBN")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.HasKey("BookId");

                            b1.ToTable("Books", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("BookId");
                        });

                    b.OwnsOne("LibraryOnlineRentalSystem.Domain.Book.Book.Publisher#LibraryOnlineRentalSystem.Domain.Book.Publisher", "Publisher", b1 =>
                        {
                            b1.Property<string>("BookId")
                                .HasColumnType("varchar(255)");

                            b1.Property<string>("PublisherName")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.HasKey("BookId");

                            b1.ToTable("Books", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("BookId");
                        });

                    b.Navigation("AmountOfCopies")
                        .IsRequired();

                    b.Navigation("Author")
                        .IsRequired();

                    b.Navigation("Category")
                        .IsRequired();

                    b.Navigation("Description")
                        .IsRequired();

                    b.Navigation("Isbn")
                        .IsRequired();

                    b.Navigation("Publisher")
                        .IsRequired();
                });

            modelBuilder.Entity("LibraryOnlineRentalSystem.Domain.User.User", b =>
                {
                    b.OwnsOne("LibraryOnlineRentalSystem.Domain.User.User.Biography#LibraryOnlineRentalSystem.Domain.User.Biography", "Biography", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Description")
                                .IsRequired()
                                .HasColumnType("longtext")
                                .HasColumnName("Biography");

                            b1.HasKey("UserId");

                            b1.ToTable("Users", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.OwnsOne("LibraryOnlineRentalSystem.Domain.User.User.Email#LibraryOnlineRentalSystem.Domain.User.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("EmailAddress")
                                .IsRequired()
                                .HasColumnType("longtext")
                                .HasColumnName("Email");

                            b1.HasKey("UserId");

                            b1.ToTable("Users", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.OwnsOne("LibraryOnlineRentalSystem.Domain.User.User.Name#LibraryOnlineRentalSystem.Domain.User.Name", "Name", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("FullName")
                                .IsRequired()
                                .HasColumnType("longtext")
                                .HasColumnName("Name");

                            b1.HasKey("UserId");

                            b1.ToTable("Users", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.OwnsOne("LibraryOnlineRentalSystem.Domain.User.User.Nif#LibraryOnlineRentalSystem.Domain.User.NIF", "Nif", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("TaxID")
                                .IsRequired()
                                .HasColumnType("longtext")
                                .HasColumnName("NIF");

                            b1.HasKey("UserId");

                            b1.ToTable("Users", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.OwnsOne("LibraryOnlineRentalSystem.Domain.User.User.PhoneNumber#LibraryOnlineRentalSystem.Domain.User.PhoneNumber", "PhoneNumber", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Number")
                                .IsRequired()
                                .HasColumnType("longtext")
                                .HasColumnName("PhoneNumber");

                            b1.HasKey("UserId");

                            b1.ToTable("Users", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.OwnsOne("LibraryOnlineRentalSystem.Domain.User.User.UserName#LibraryOnlineRentalSystem.Domain.User.UserName", "UserName", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Tag")
                                .IsRequired()
                                .HasColumnType("longtext")
                                .HasColumnName("UserName");

                            b1.HasKey("UserId");

                            b1.ToTable("Users", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.Navigation("Biography")
                        .IsRequired();

                    b.Navigation("Email")
                        .IsRequired();

                    b.Navigation("Name")
                        .IsRequired();

                    b.Navigation("Nif")
                        .IsRequired();

                    b.Navigation("PhoneNumber")
                        .IsRequired();

                    b.Navigation("UserName")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
