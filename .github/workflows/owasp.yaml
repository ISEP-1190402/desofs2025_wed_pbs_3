name: CI .NET + Docker + SonarCloud + ZAP
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types: [published]

jobs:
  build-analyze-scan:
    runs-on: ubuntu-latest

    services:
      # Não precisa de serviço extra, o próprio job vai rodar o container

    steps:
      - name: Checkout código
        uses: actions/checkout@v3

      - name: Login Docker Hub (se for necessário push da imagem)
        # Se você precisar enviar imagem para algum registry, coloque aqui

      - name: Build imagem Docker
        run: docker build -t libraryonlinebackend:latest .

      - name: Run container backend
        run: |
          docker run -d -p 5000:8080 --name backend libraryonlinebackend:latest
          sleep 15  # espera o backend subir

      - name: OWASP ZAP Scan contra backend Docker
        uses: zaproxy/action-baseline@v0.12.0
        with:
          target: 'http://localhost:5000/api/'  # Ajuste conforme endpoint do seu backend
          args: -r

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependências
        run: dotnet restore

      - name: SonarCloud begin analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet tool install --global dotnet-sonarscanner
          export PATH="$PATH:/home/runner/.dotnet/tools"
          dotnet-sonarscanner begin /k:"LibraryOnlineRentalSystem" /o:"SUA_ORGANIZACAO" /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

      - name: Build para Sonar
        run: dotnet build --no-restore

      - name: Testes
        run: dotnet test --no-build --verbosity normal

      - name: SonarCloud end analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

      - name: Stop and remove Docker container
        run: |
          docker stop backend
          docker rm backend
