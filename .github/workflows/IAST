name: .NET + IAST Security Scan

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-iast:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Restore dependencies
      run: dotnet restore
      working-directory: LibraryOnlineRentalSystem

    - name: Build project
      run: dotnet build --no-restore
      working-directory: LibraryOnlineRentalSystem

    - name: Run unit tests
      run: dotnet test --no-build --verbosity normal
      working-directory: LibraryOnlineRentalSystem

    - name: Start application
      run: |
        dotnet run --project LibraryOnlineRentalSystem & 
        sleep 20  # Aguarda a aplicação estar disponível

    - name: Run Veracode IAST scan
      env:
        VERACODE_API_ID: ${{ secrets.VERACODE_API_ID }}
        VERACODE_API_KEY: ${{ secrets.VERACODE_API_KEY }}
      run: |
        curl -O https://downloads.veracode.com/securityscan/pipeline/VeracodeIASTAgent.jar
        java -jar VeracodeIASTAgent.jar \
          -appName "LibraryOnlineRentalSystem" \
          -url http://localhost:5000 \
          -scanName "CI IAST Scan" \
          -policy "Default Policy"

    - name: Upload IAST report
      uses: actions/upload-artifact@v3
      with:
        name: veracode-iast-report
        path: iast-report.json  # ou outro caminho que o Veracode gerar
