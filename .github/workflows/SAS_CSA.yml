name: Snyk Security Scan

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  PROJECT_DIR: ./LibraryOnlineRentalSystem
  CSPROJ_PATH: LibraryOnlineRentalSystem.csproj  # Alterado para caminho relativo dentro do diret√≥rio do projeto

jobs:
  security-scan:
    name: Run Snyk Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Verify project structure
      run: |
        ls -la ${{ env.PROJECT_DIR }}
        echo "CSPROJ_PATH: ${{ env.PROJECT_DIR }}/${{ env.CSPROJ_PATH }}"
        test -f "${{ env.PROJECT_DIR }}/${{ env.CSPROJ_PATH }}" || exit 1

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.0.x'

    - name: Restore dependencies
      run: dotnet restore ${{ env.CSPROJ_PATH }}
      working-directory: ${{ env.PROJECT_DIR }}

    - name: Install Snyk
      run: npm install -g snyk

    - name: Authenticate to Snyk
      run: snyk auth ${{ env.SNYK_TOKEN }}

    - name: Run Snyk CSA (Dependency Scan)
      run: snyk test --file=${{ env.CSPROJ_PATH }} --all-projects
      working-directory: ${{ env.PROJECT_DIR }}
      continue-on-error: true

    - name: Run Snyk SAST (Code Analysis)
      run: snyk code test . --severity-threshold=high
      working-directory: ${{ env.PROJECT_DIR }}
      continue-on-error: true

    - name: Generate SARIF report
      run: snyk code test . --sarif-file-output=snyk.sarif
      working-directory: ${{ env.PROJECT_DIR }}
      if: always()

    - name: Upload SARIF results
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: ${{ env.PROJECT_DIR }}/snyk.sarif
      if: always()