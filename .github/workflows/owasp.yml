name: .NET API Security Scan

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

env:
  DOCKER_IMAGE_NAME: library-api
  API_PORT: 5000

jobs:
  security-scans:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      # 1. Checkout (usando versão explícita)
      - name: Checkout
        uses: actions/checkout@v4.1.1  # Versão fixa

      # 2. Setup .NET
      - name: Setup .NET
        uses: actions/setup-dotnet@v3 # Versão fixa
        with:
          dotnet-version: 8.0.x

      # Debug: Verificação completa
      - name: Verify files
        run: |
          echo "Conteúdo do diretório raiz:"
          ls -la
          echo "Conteúdo do diretório do projeto:"
          ls -la ${{ env.PROJECT_DIR }}
          echo "Verificando Dockerfile:"
          ls -la ${{ env.PROJECT_DIR }}/Dockerfile || echo "Dockerfile não encontrado"
          cat ${{ env.PROJECT_DIR }}/Dockerfile || true
          
      #4. Build Docker (solução definitiva)
      - name: Build Docker Image
        working-directory: ./LibraryOnlineRentalSystem
        run: |
          echo "Building Docker image from $(pwd)" 
          docker build -t $DOCKER_IMAGE_NAME .

      - name: Create Docker Network
        run: docker network create zap-net
      
      - name: Run API Container
        run: |
          docker run -d \
            --name api \
            --network zap-net \
            -p $API_PORT:$API_PORT \
            $DOCKER_IMAGE_NAME
          sleep 10
          
      - name: Install SonarScanner for .NET
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Start SonarCloud Analysis
        run: |
          dotnet sonarscanner begin \
            /k:"jorgealmeidadeveloper_LibraryOnlineRentalSystem" \
            /o:"jorgealmeidadeveloper" \
            /d:sonar.login="${{ secrets.SONAR_TOKEN }}" \
            /d:sonar.host.url="https://sonarcloud.io" \
            /d:sonar.dotnet.buildConfiguration="Release"       

      - name: Debug Docker containers and network
        run: |
          docker ps
          docker network inspect zap-net

          
      # 6. OWASP ZAP Scan
      - name: API Security Scan
        uses: zaproxy/action-baseline@v0.12.0
        with:
          target: "http://172.18.0.2:${{ env.API_PORT }}"  # <-- use container name "api"
          args: >
            -J report_json.json
            -w report_md.md
            -r report_html.html
        timeout-minutes: 10

      # 7. Upload do relatório (usando v4, a mais recente)
      - name: Upload ZAP Report
        uses: actions/upload-artifact@v4.3.3  # Versão fixa
        with:
          name: zap-security-report
          path: zap-report.html

      # 8. Parar container
      - name: Stop Container
        if: always()
        run: docker stop api && docker rm api
