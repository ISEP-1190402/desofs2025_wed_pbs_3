name: .NET API Security Scan with Snyk

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

env:
  DOCKER_IMAGE_NAME: library-api
  API_PORT: 8080

jobs:
  scan_DAST:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      # 1. Checkout
      - name: Checkout
        uses: actions/checkout@v4

      # 2. Setup .NET
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      # 3. Build Docker Image
      - name: Build Docker Image
        working-directory: ./LibraryOnlineRentalSystem
        run: docker build -t $DOCKER_IMAGE_NAME .

      # 4. SAST with Snyk
      - name: Run Snyk Security Scan
        uses: snyk/actions/dotnet@master
        with:
          command: test
          args: --severity-threshold=high --sarif-file-output=snyk_results.sarif
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      # 5. Container scan (with proper Dockerfile handling)
      - name: Run Snyk Container Scan
        working-directory: ./LibraryOnlineRentalSystem
        run: |
          # Verify Dockerfile exists
          if [ ! -f Dockerfile ]; then
            echo "::error::Dockerfile not found in $(pwd)"
            exit 1
          fi
          
          # Run container scan
          docker run --rm -v $(pwd):/project -e SNYK_TOKEN=${{ secrets.SNYK_TOKEN }} \
            snyk/snyk:dotnet snyk container test $DOCKER_IMAGE_NAME \
            --file=Dockerfile \
            --severity-threshold=high \
            --sarif-file-output=snyk_container_results.sarif || echo "::warning::Snyk container scan failed"
          
          # Check if results were generated
          if [ -f snyk_container_results.sarif ]; then
            echo "Container scan results generated"
          fi    

      # 5. Upload Snyk report
      - name: Upload Snyk Report
        uses: actions/upload-artifact@v4
        with:
          name: snyk-security-report
          path: snyk_results.sarif

      # 6. DAST with Snyk (optional container scan)
      - name: Run Snyk Container Scan
        if: always()
        uses: snyk/actions/docker@master
        with:
          image: $DOCKER_IMAGE_NAME
          args: --severity-threshold=high --file=Dockerfile
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}