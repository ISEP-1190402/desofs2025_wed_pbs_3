name: Snyk Security Scan

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  PROJECT_DIR: ./LibraryOnlineRentalSystem
  CSPROJ_NAME: LibraryOnlineRentalSystem.csproj

jobs:
  security-scan:
    name: Run Snyk Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Verify project structure
      run: |
        echo "Verifying project structure in ${{ env.PROJECT_DIR }}"
        ls -la ${{ env.PROJECT_DIR }}
        test -f "${{ env.PROJECT_DIR }}/${{ env.CSPROJ_NAME }}" || {
          echo "::error::Project file ${{ env.CSPROJ_NAME }} not found in ${{ env.PROJECT_DIR }}"
          exit 1
        }

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore ${{ env.CSPROJ_NAME }}
      working-directory: ${{ env.PROJECT_DIR }}

    - name: Install Snyk CLI
      run: npm install -g snyk@latest

    - name: Authenticate with Snyk (simplified)
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      run: |
        # Skip explicit auth and rely on SNYK_TOKEN env var
        echo "Skipping explicit auth, using SNYK_TOKEN directly"
        
        # Verify token is set
        if [ -z "$SNYK_TOKEN" ]; then
          echo "::error::SNYK_TOKEN is empty or not set"
          exit 1
        fi

    - name: Run Snyk Dependency Scan (CSA)
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      run: |
        snyk test --file=${{ env.CSPROJ_NAME }} --all-projects
      working-directory: ${{ env.PROJECT_DIR }}
      continue-on-error: true
      
    - name: Run Snyk Code Scan (SAST)
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      run: |
        snyk code test --severity-threshold=high
      working-directory: ${{ env.PROJECT_DIR }}
      continue-on-error: true

    - name: Generate SARIF report
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      run: |
        snyk code test --sarif-file-output=snyk.sarif
      working-directory: ${{ env.PROJECT_DIR }}
      if: always()

    - name: Upload SARIF results
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: ${{ env.PROJECT_DIR }}/snyk.sarif
      if: always()