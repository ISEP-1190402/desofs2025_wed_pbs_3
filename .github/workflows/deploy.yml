# .github/workflows/security.yml
name: Cloud Security Assessment

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  sast:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'  # ou a versão que você usa no projeto

      - name: Restore dependencies
        run: dotnet restore LibraryOnlineRentalSystem/LibraryOnlineRentalSystem.csproj

      - name: Build the project
        run: dotnet build LibraryOnlineRentalSystem/LibraryOnlineRentalSystem.csproj --no-restore --configuration Release

      - name: Install SonarScanner for MSBuild
        run: |
          dotnet tool install --global dotnet-sonarscanner
          export PATH="$PATH:$HOME/.dotnet/tools"

      - name: Begin SonarCloud analysis
        run: |
          dotnet sonarscanner begin /k:"jorgealmeidadeveloper_LibraryOnlineRentalSystem" /o:"jorgealmeidadeveloper" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

      - name: Build the project
        run: dotnet build LibraryOnlineRentalSystem/LibraryOnlineRentalSystem.csproj --configuration Release

      - name: End SonarCloud analysis
        run: dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"  
    env:
      
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  dependency-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Run Snyk
        uses: snyk/actions/node@master
        with:
          command: test --all-projects
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  iac-security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Run Checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: .
          framework: terraform

  container-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Run Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'myapp:latest'
          format: 'sarif'
          output: 'trivy-results.sarif'
